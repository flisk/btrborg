#!/bin/bash
# vim: ft=sh noet ts=8 sw=8
set -eu
scriptname="$(basename "$0")"

# BORG_REPO and BORG_PASSPHRASE should be set here.
profile=/etc/btrborg/profile

# If these files exist, they'll be sourced as shell scripts before and after
# the backup, respectively.
pre_hook=/etc/btrborg/pre
post_hook=/etc/btrborg/post

exclude_from=/etc/btrborg/exclude
snapshot_dir_name=.btrborg-snapshot
root_snapshot_dir=/.btrborg-snapshot

borg_progress=
msg_format="%s: %s"

if [[ -t 1 ]]; then
  borg_progress=--progress
  msg_format="\e[1m%s:\e[0m %s"
fi

msg() {
  printf "$msg_format\n" "$scriptname" "$*"
}

cleanup() {
  for other_btrfs_root in "${other_btrfs_roots[@]}"; do
    if mountpoint -q "$root_snapshot_dir/$other_btrfs_root"; then
      umount "$root_snapshot_dir/$other_btrfs_root"
    fi

    if [[ -d "$other_btrfs_root/$snapshot_dir_name" ]]; then
      btrfs subvolume delete "$other_btrfs_root/$snapshot_dir_name" >/dev/null
    fi
  done

  if [[ -d "$root_snapshot_dir" ]]; then
    btrfs subvolume delete "$root_snapshot_dir" >/dev/null
  fi
}

trap cleanup EXIT

if [[ "$(id -u)" != 0 ]]; then
  >&2 msg "must be run as root"
  exit 1
fi

if [[ ! -f "$exclude_from" ]]; then
  >&2 msg "exclude_from ($exclude_from) doesn't exist"
  exit 1
fi

renice 19 $$ >/dev/null
ionice -c Idle -p $$

other_source_paths=()
other_btrfs_roots=()
. "$profile"

if [[ -f "$pre_hook" ]]; then
	. "$pre_hook"
fi

if [[ -d "$root_snapshot_dir" ]]; then
  >&2 msg "Snapshot ($root_snapshot_dir) seems to exist, trying to delete..."
  cleanup
fi

msg "Snapshotting /..."
btrfs subvolume snapshot -r / "$root_snapshot_dir" >/dev/null

for other_btrfs_root in "${other_btrfs_roots[@]}"; do
  msg "Snapshotting $other_btrfs_root..."
  btrfs subvolume snapshot -r \
        "$other_btrfs_root" \
        "$other_btrfs_root/$snapshot_dir_name" \
        >/dev/null

  msg "Mounting $other_btrfs_root/$snapshot_dir_name into $root_snapshot_dir..."
  mount --bind \
        "$other_btrfs_root/$snapshot_dir_name" \
        "$root_snapshot_dir/$other_btrfs_root"
done

msg "Creating a borg archive..."
(
cd "$root_snapshot_dir"

BORG_REPO="$BORG_REPO"                  \
BORG_PASSPHRASE="$BORG_PASSPHRASE"      \
         borg create                    \
         $borg_progress                 \
         --stats                        \
         --compression auto,lzma,6      \
         --exclude-caches               \
         --exclude-from "$exclude_from" \
         ::'{hostname}-{now}'           \
	       . "${other_source_paths[@]}"
)

msg "Cleaning up..."
cleanup

msg "Pruning old backups..."
BORG_REPO="$BORG_REPO"             \
BORG_PASSPHRASE="$BORG_PASSPHRASE" \
         borg prune --keep-daily 7 --keep-weekly 4 --stats --prefix '{hostname}-'

if [[ -f "$post_hook" ]]; then
  . "$post_hook"
fi
